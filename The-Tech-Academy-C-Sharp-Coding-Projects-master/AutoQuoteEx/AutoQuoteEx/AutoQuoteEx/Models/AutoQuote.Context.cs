//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoQuoteEx.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AutoInsQuoteEntities : DbContext
    {
        public AutoInsQuoteEntities()
            : base("name=AutoInsQuoteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<QuoteTotal> QuoteTotals { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
    
        public virtual int sp_InsertQuote(string firstName, string lastName, string emailAddress, Nullable<System.DateTime> dob, Nullable<int> carYear, string carMake, string carModel, string dui, Nullable<int> speedTickets, string coverageType)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("Dob", dob) :
                new ObjectParameter("Dob", typeof(System.DateTime));
    
            var carYearParameter = carYear.HasValue ?
                new ObjectParameter("CarYear", carYear) :
                new ObjectParameter("CarYear", typeof(int));
    
            var carMakeParameter = carMake != null ?
                new ObjectParameter("CarMake", carMake) :
                new ObjectParameter("CarMake", typeof(string));
    
            var carModelParameter = carModel != null ?
                new ObjectParameter("CarModel", carModel) :
                new ObjectParameter("CarModel", typeof(string));
    
            var duiParameter = dui != null ?
                new ObjectParameter("Dui", dui) :
                new ObjectParameter("Dui", typeof(string));
    
            var speedTicketsParameter = speedTickets.HasValue ?
                new ObjectParameter("SpeedTickets", speedTickets) :
                new ObjectParameter("SpeedTickets", typeof(int));
    
            var coverageTypeParameter = coverageType != null ?
                new ObjectParameter("CoverageType", coverageType) :
                new ObjectParameter("CoverageType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertQuote", firstNameParameter, lastNameParameter, emailAddressParameter, dobParameter, carYearParameter, carMakeParameter, carModelParameter, duiParameter, speedTicketsParameter, coverageTypeParameter);
        }
    }
}
